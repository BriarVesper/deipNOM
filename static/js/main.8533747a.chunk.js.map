{"version":3,"sources":["components/context.js","components/recipes/subcom/SmallInput.js","components/recipes/subcom/BigInput.js","components/recipes/NewRecipe.js","components/recipes/Recipe.js","components/recipes/RecipeList.js","components/recipes/Modal.EditRecipe.js","components/recipes/delegate.js","components/main/RecipePage.js","components/shopping/ShoppingList.js","components/shopping/ListRecipeItem.js","components/shopping/SelectedRecipes.js","components/main/ShoppingPage.js","components/tab/Tab.js","components/tab/PageTab.js","components/main/MainView.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","PageContext","SmallInput","placeholder","useState","value","setValue","className","type","onChange","e","target","BigInput","NewRecipe","dispatchRecipeEvent","useContext","handleAddRecipe","a","ingredients","JSON","stringify","parseIngredients","ing","recipe","title","description","source","instructions","uniqid","handleAddThumbnail","image","newRecipe","thumbnail","trim","length","split","map","item","parse","searchTerm","gis","filterOutDomains","err","res","console","log","titleInput","descriptionInput","sourceInput","ingInput","instructionsInput","id","onClick","Recipe","handleSelectedRecipe","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","_id","RecipeList","recipes","customStyles","content","top","left","right","bottom","marginRight","transform","width","Modal","setAppElement","EditRecipeModal","isOpen","parentIsOpen","handleSetIsOpen","recipeToEdit","modalIsOpen","setIsOpen","closeModal","useEffect","onAfterOpen","color","onRequestClose","contentLabel","ref","_thumbnail","updatedRecipe","storage","localStorage","getRecipeList","getItem","recipeDelegate","getAllRecipes","Promise","resolve","reject","submit","callback","errback","setItem","then","catch","error","remove","recipeToRemove","findIndex","Error","removed","splice","edit","editRecipe","RecipePage","setRecipes","setRecipeToEdit","delegate","fetchRecipes","parsedRecipeList","fetchData","handleNewRecipe","data","savedRecipe","handleDeleteRecipe","removedRecipe","filter","handleOpenEditModal","find","handleEditRecipe","updatedList","updateRecipeListAfterEdit","updRecipeIndex","recipeCopy","Provider","ShoppingList","selectedRecipes","ingredientList","setIngredientList","ingArr","ingredientObj","reduce","pre","cur","concat","combine","prettifyIngredient","ingObj","unit","maxQty","ingredient","unitPlural","index","ListRecipeItem","toRemove","handleRemoveSelectedRecipe","SelectedRecipes","ShoppingPage","Tab","props","handlePageChange","active","classList","contains","list","parentNode","Array","prototype","indexOf","call","children","name","PageTab","selectedPage","MainView","setSelectedPage","setSelectedRecipes","saveRecipes","transitionDuration","removeIdx","arrToFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8533747a.chunk.js","sourcesContent":["import { createContext } from 'react';\nconst AppContext = createContext();\nconst PageContext = createContext();\nexport { PageContext };\nexport default AppContext;\n","import React, { useState } from 'react';\n\nfunction SmallInput({ placeholder }) {\n  const [value, setValue] = useState(\"\");\n  const input = <div>\n      <input\n        className=\"add-recipe-input small-input\"\n        type=\"text\" \n        value={value} \n        onChange={e => {setValue(e.target.value)}}\n        placeholder={placeholder}\n      />\n    </div>\n\n  return [value, input];\n}\n\nexport default SmallInput;","import React, { useState } from 'react';\n\nfunction BigInput({ placeholder }) {\n  const [value, setValue] = useState(\"\");\n  const input = <div>\n      <textarea\n        className=\"add-recipe-input big-input\"\n        type=\"text\" \n        value={value} \n        onChange={e => {setValue(e.target.value)}}\n        placeholder={placeholder}\n      />\n    </div>\n\n  return [value, input];\n}\n\nexport default BigInput;","import React, { useContext, useState } from 'react';\nimport uniqid from 'uniqid';\n\nimport AppContext from '../context';\nimport SmallInput from './subcom/SmallInput';\nimport BigInput from './subcom/BigInput';\n\nimport { parse } from 'recipe-ingredient-parser-v3';\nimport gis from 'g-i-s';\n\nconst NewRecipe = () => {\n  const { dispatchRecipeEvent } = useContext(AppContext);\n\n  const handleAddRecipe = async () => {\n    let ingredients = JSON.stringify(parseIngredients(ing));\n    let recipe = { title, description, source, ingredients, instructions, \"_id\": uniqid() };\n    let image = await handleAddThumbnail(title);\n    dispatchRecipeEvent('ADD', { newRecipe: recipe, thumbnail: image });\n  };\n\n  const parseIngredients = (ing) => {\n    if (!ing || ing.trim().length === 0) return [{}];\n\n    let ingArr = ing.split(/[\\n,]+/).map(item => item.trim());\n    let parsedIngredients = ingArr.map(item => parse(item, 'eng'));\n    return parsedIngredients;\n  };\n\n  const handleAddThumbnail = async (searchTerm) => {\n    return gis({ searchTerm: searchTerm, filterOutDomains: ['pinterest.com'] }, (err, res) => {\n      if (err)\n        console.log(err);\n      else {\n        if (res.length === 0) return;\n        return res[0];\n      }\n    });\n  }\n\n  const [title, titleInput] = SmallInput({ placeholder: \"title\" });\n  const [description, descriptionInput] = SmallInput({ placeholder: \"description\" });\n  const [source, sourceInput] = SmallInput({ placeholder: \"source\" });\n  const [ing, ingInput] = BigInput({ placeholder: \"ingredients (comma or newline separated)\" });\n  const [instructions, instructionsInput] = BigInput({ placeholder: \"instructions\" });\n\n  return (\n    <div id=\"add-recipe\">\n      <h3 className=\"add-recipe-header\">Add New Recipe</h3>\n      <div className=\"add-recipe-top-container\">\n        <div className=\"small-inputs\">\n          {titleInput}\n          {descriptionInput}\n          {sourceInput}\n        </div>\n      </div>\n      <div className=\"add-recipe-btm-container\">\n        {ingInput}\n        {instructionsInput}\n        <button onClick={handleAddRecipe}>Add Recipe</button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipe;","import { useContext } from 'react';\nimport AppContext, { PageContext } from '../context';\n\nimport { FaPlus, FaTrashAlt, FaFeatherAlt } from \"react-icons/fa\";\n\nconst Recipe = ({ recipe }) => {\n  const { dispatchRecipeEvent } = useContext(AppContext);\n  const { handleSelectedRecipe } = useContext(PageContext);\n\n  const handleRemoveRecipe = () => {\n    dispatchRecipeEvent('REMOVE', { id: recipe._id });\n  };\n\n  const handleEditRecipe = () => {\n    dispatchRecipeEvent('OPEN_EDIT', { id: recipe._id });\n  };\n\n  const handlePickRecipe = () => {\n    handleSelectedRecipe(recipe);\n  }\n\n  return (\n    <div className=\"recipe-item\"\n      style={{\n        backgroundImage: \"url(\" + recipe.image + \")\",\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'        \n      }}\n    >\n      <div className=\"header\">\n        <div className=\"title\">{recipe.title}</div>\n        <button className=\"select icon-button-small\" onClick={handlePickRecipe}><FaPlus/></button>\n      </div>\n      <div className=\"middle\">\n        <small>{recipe.description}</small>\n      </div>\n      <div className=\"footer\">\n        <button onClick={handleRemoveRecipe} className=\"icon-button-small\"><FaTrashAlt/></button>\n        <button onClick={handleEditRecipe} className=\"icon-button-small\"><FaFeatherAlt/></button>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;","\nimport React, { useContext } from 'react';\nimport AppContext from '../context';\nimport Recipe from './Recipe';\n\nconst RecipeList = () => {\n  const { recipes } = useContext(AppContext);\n  return (\n    <div id=\"recipe-list\">\n      <div className=\"recipe-list-header\">\n        <h3>Recipes</h3>\n      </div>\n      <div className=\"list\">\n        {recipes.map(recipe => \n          <Recipe \n            key={recipe._id} \n            recipe={recipe} \n          />)\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;","import React, { useState, useEffect, useContext } from 'react';\nimport Modal from 'react-modal';\n\nimport SmallInput from './subcom/SmallInput';\nimport BigInput from './subcom/BigInput';\nimport AppContext from '../context';\n\nimport { FaPlusCircle } from 'react-icons/fa';\nimport { parse } from 'recipe-ingredient-parser-v3';\n\nimport '../../style/Recipe.css';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '450px'\n  },\n};\n\nModal.setAppElement('#root');\nfunction EditRecipeModal({ isOpen: parentIsOpen = false, handleSetIsOpen, recipeToEdit }) {\n  const { dispatchRecipeEvent } = useContext(AppContext);\n  let thumbnail;\n  const [modalIsOpen, setIsOpen] = useState(parentIsOpen);\n  useEffect(() => { setIsOpen(parentIsOpen); }, [parentIsOpen]);\n\n  function afterOpenModal() {\n    console.log(recipeToEdit);\n    thumbnail.style.color = '#cb9eff';\n  }\n\n  function closeModal() {\n    handleSetIsOpen(false);\n  }\n\n  const handleEditRecipe = () => {\n    let ingredients = ing.length !== 0 ? JSON.stringify(parseIngredients(ing)) : JSON.stringify(recipeToEdit.ingredients);\n\n    // Is there a better way to do this?\n    // Only update the fields that have been modified, keep everything else as it was\n    let updatedRecipe = {\n      ...recipeToEdit,\n      title: title || recipeToEdit.title,\n      description: description || recipeToEdit.description,\n      source: source || recipeToEdit.source,\n      ingredients: ingredients,\n      instructions: instructions || recipeToEdit.instructions,\n    }\n\n    dispatchRecipeEvent('EDIT', { updatedRecipe: updatedRecipe });\n    closeModal();\n  };\n\n  const parseIngredients = (ing) => {\n    if (!ing || ing.trim().length === 0) return [{}];\n\n    let ingArr = ing.split(/[\\n,]+/).map(item => item.trim());\n    let parsedIngredients = ingArr.map(item => parse(item, 'eng'));\n    return parsedIngredients;\n  };\n\n  const handleAddThumbnail = (e) => {\n    console.log(\"TODO\");\n  }\n\n  const [title, titleInput] = SmallInput({ placeholder: recipeToEdit.title || \"title\" });\n  const [description, descriptionInput] = SmallInput({ placeholder: recipeToEdit.description || \"description\" });\n  const [source, sourceInput] = SmallInput({ placeholder: recipeToEdit.source || \"source\" });\n  const [ing, ingInput] = BigInput({ placeholder: \"ingredients\" });\n  const [instructions, instructionsInput] = BigInput({ placeholder: recipeToEdit.instructions || \"instructions\" });\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edit Recipe\"\n      >\n        <div id=\"add-recipe\">\n          <h3 className=\"add-recipe-header\">Editing {recipeToEdit.title}</h3>\n          <div className=\"add-recipe-top-container\">\n            <div className=\"add-recipe-thumbnail\" ref={(_thumbnail) => (thumbnail = _thumbnail)} onClick={handleAddThumbnail}><FaPlusCircle/></div>\n            <div className=\"small-inputs\">\n              {titleInput}\n              {descriptionInput}\n              {sourceInput}\n            </div>\n          </div>\n          <div className=\"add-recipe-btm-container\">\n            {ingInput}\n            {instructionsInput}\n            <button onClick={handleEditRecipe}>Edit Recipe</button>\n            <button className=\"cancel-button\" onClick={closeModal}>Cancel</button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default EditRecipeModal;","const storage = localStorage;\nconst getRecipeList = () => { return JSON.parse(localStorage.getItem('recipes')) || []; };\nconst recipeDelegate = {\n  /**\n   * @returns {Object} List of ToDo items\n   */\n  getAllRecipes: async () => {\n    return new Promise((resolve, reject) => {\n      resolve(getRecipeList());\n    });\n  },\n  /**\n   * Creation of new recipe item\n   * @param {Object} recipe Object consisting of all recipe information to save\n   * @param {function} callback Response handler\n   * @param {function} errback Error handler\n   */\n  submit: async (recipe, callback, errback) => {\n    return new Promise((resolve, reject) => {\n      let recipes = getRecipeList();\n      recipes = [...recipes, recipe.recipe];\n      storage.setItem('recipes', JSON.stringify(recipes));\n      resolve(recipe.recipe);\n    })\n    .then(res => { callback && callback(res); })\n    .catch(error => { errback && errback(error); });\n  },\n  /**\n   * Deletion of Recipe item\n   * @param {String} id The id of the item to delete\n   * @param {function} callback Response handler\n   * @param {function} errback Error handler\n   */\n  remove: async (id, callback, errback) => {\n    return new Promise((resolve, reject) => {\n      let recipes = getRecipeList();\n      let recipeToRemove = recipes.findIndex(recipe => recipe._id === id);\n      if (recipeToRemove === -1)\n        reject(new Error('ID not found'));\n\n      let removed = recipes.splice(recipeToRemove, 1);\n      storage.setItem('recipes', JSON.stringify(recipes));\n      resolve(removed[0]);\n    })\n    .then(res => { callback && callback(res); })\n    .catch(error => { errback && errback(error); });\n  },\n  /**\n   * Updating of a Recipe item\n   * @param {Object} recipe The id of the item to delete\n   * @param {function} callback Response handler\n   * @param {function} errback Error handler\n   */\n   edit: async (recipe, callback, errback) => {\n    return new Promise((resolve, reject) => {\n      let recipes = getRecipeList();\n      let recipeToEdit = recipes.findIndex(editRecipe => editRecipe._id === recipe.recipe._id);\n      if (recipeToEdit === -1)\n        reject(new Error('ID not found'));\n\n      recipes[recipeToEdit] = recipe.recipe;\n      storage.setItem('recipes', JSON.stringify(recipes));\n      resolve(recipe.recipe);\n    })\n    .then(res => { callback && callback(res); })\n    .catch(error => { errback && errback(error); });\n  },\n};\n\nexport default recipeDelegate;","import React, { useState, useEffect } from 'react';\nimport NewRecipe from '../recipes/NewRecipe';\nimport RecipeList from '../recipes/RecipeList';\nimport EditRecipeModal from '../recipes/Modal.EditRecipe';\nimport AppContext from '../context';\nimport delegate from '../recipes/delegate';\n\nimport '../../style/Recipe.css';\n\nfunction RecipePage() {\n  const [recipes, setRecipes] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [recipeToEdit, setRecipeToEdit] = useState({});\n  const handleSetIsOpen = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    async function fetchData() {\n      let fetchRecipes = await delegate.getAllRecipes();\n      let recipeList = fetchRecipes || [];\n      let parsedRecipeList = recipeList.map(recipe => ({ ...recipe, ingredients: JSON.parse(recipe.ingredients || \"{}\") }));\n      setRecipes(parsedRecipeList);  \n    }\n    fetchData();\n  }, []);\n\n  const dispatchRecipeEvent = (type, data) => {\n    switch (type) {\n      case 'ADD':\n        handleNewRecipe(data);\n        return;\n      case 'REMOVE':\n        handleDeleteRecipe(data);\n        return;\n      case 'OPEN_EDIT':\n        handleOpenEditModal(data);\n        return;\n      case 'EDIT':\n        handleEditRecipe(data);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleNewRecipe = async (data) => {\n    let newRecipe = data.newRecipe;\n    if (!newRecipe.title || !newRecipe.title.trim()) return null;\n\n    delegate.submit({\n      recipe: newRecipe\n    }, \n      (res) => {\n        let savedRecipe = res;\n        savedRecipe.ingredients = JSON.parse(savedRecipe.ingredients);\n        setRecipes([ ...recipes, savedRecipe ]); \n        console.log(res);\n      },\n      (err) => { console.log(err); }\n    );\n  }\n\n  const handleDeleteRecipe = (data) => {\n    delegate.remove(\n      data.id, \n      (res) => { \n        let removedRecipe = res;\n        setRecipes(recipes.filter(recipe => recipe._id !== removedRecipe._id));\n       },\n      (err) => { console.log(err); }\n    );\n  }\n\n  const handleOpenEditModal = (data) => {\n    let editRecipe = recipes.find(recipe => recipe._id === data.id)\n    setRecipeToEdit(editRecipe);\n    handleSetIsOpen(!isOpen);\n  }\n\n  const handleEditRecipe = (data) => {\n    let updatedRecipe = data.updatedRecipe;\n\n    delegate.edit({\n      recipe: updatedRecipe\n    }, \n      (res) => {\n        let updatedRecipe = res;\n        updatedRecipe.ingredients = JSON.parse(updatedRecipe.ingredients);\n        let updatedList = updateRecipeListAfterEdit(updatedRecipe);\n        setRecipes(updatedList); \n        console.log(res);\n      },\n      (err) => { console.log(err); }\n    );\n  }\n\n  const updateRecipeListAfterEdit = (updatedRecipe) => {\n    let updRecipeIndex = recipes.findIndex(recipe => recipe._id === updatedRecipe._id);\n    let recipeCopy = [...recipes];\n    recipeCopy[updRecipeIndex] = updatedRecipe;\n    return recipeCopy;\n  }\n\n  return (\n    <div id=\"recipe-page\">\n      <AppContext.Provider value={{ recipes, dispatchRecipeEvent }}>\n        <EditRecipeModal isOpen={isOpen} handleSetIsOpen={handleSetIsOpen} recipeToEdit={recipeToEdit}/>\n        <NewRecipe />\n        <RecipeList />\n      </AppContext.Provider>\n    </div>\n  );\n\n}\n\nexport default RecipePage;","import React, { useContext, useEffect, useState } from 'react';\nimport { PageContext } from '../context';\nimport { combine } from 'recipe-ingredient-parser-v3';\n\nconst ShoppingList = () => {\n  const { selectedRecipes } = useContext(PageContext);\n  const [ingredientList, setIngredientList] = useState([]);\n\n  useEffect(() => {\n    let ingArr = [];\n    if (selectedRecipes.length !== 0) {\n      let ingredientObj = selectedRecipes.map(recipe => {\n        return recipe.ingredients;\n      }).reduce((pre, cur) => {\n        // Concat all the different recipe ingredient arrays into one big array\n        return pre.concat(cur);\n      }).map((ing) => {\n        return ing;\n      });\n      let combinedIngredients = combine(ingredientObj);\n      ingArr = combinedIngredients.map(ing => {\n        return prettifyIngredient(ing);\n      });\n    }\n\n    setIngredientList(ingArr);\n    return;\n  }, [selectedRecipes]);\n\n  const prettifyIngredient = (ingObj) => {\n    var prettyString;\n    if (ingObj.unit) {\n      // 1 cup of flour\n      prettyString = ingObj.maxQty === 1 ? \n        ingObj.maxQty + \" \" + ingObj.unit + \" of \" + ingObj.ingredient /*1 cup of flour*/ :\n        ingObj.maxQty + \" \" + ingObj.unitPlural + \" of \" + ingObj.ingredient; /*4 cups of flour*/\n    } else {\n      // 1 carrot\n      prettyString = ingObj.maxQty + \" \" + ingObj.ingredient;\n    }\n    return prettyString;\n  }\n\n  return (\n    <div id=\"shopping-list\">\n      <h3 className=\"header\">Shopping List</h3>\n      <hr/>\n      <div className=\"list\">\n        <ul>\n          {ingredientList.map((ingredient, index) => <li key={index}>{ingredient}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingList;","import React, { useContext } from 'react';\nimport { PageContext } from '../context';\n\nconst ListRecipeItem = ({ recipe, toRemove }) => {\n  const { handleRemoveSelectedRecipe } = useContext(PageContext);\n\n  const handleRemove = () => {\n    handleRemoveSelectedRecipe(toRemove);\n  }\n\n  return (\n    <div className=\"selected-recipe-item\">\n      <div>\n        <button onClick={handleRemove} className=\"text-button-small\">remove</button>\n        {recipe.title}\n      </div>\n    </div>\n  );\n};\n\nexport default ListRecipeItem;","import React, { useContext } from 'react';\nimport ListRecipeItem from './ListRecipeItem';\nimport { PageContext } from '../context';\n\nconst SelectedRecipes = () => {\n  const { selectedRecipes } = useContext(PageContext);\n\n  return (\n    <div id=\"selected-recipe-list\">\n      <h3 className=\"header\">Selected Recipes</h3>\n      <hr/>\n      <div className=\"list\">\n        {selectedRecipes.map((recipe, index) => <ListRecipeItem key={index} recipe={recipe} toRemove={index}/>)}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedRecipes;","import React from 'react';\nimport ShoppingList from '../shopping/ShoppingList';\nimport SelectedRecipes from '../shopping/SelectedRecipes';\n\nimport '../../style/Shopping.css';\n\nconst ShoppingPage = () => {\n  return (\n    <div id=\"shopping-page\">\n      <ShoppingList/>\n      <SelectedRecipes/>\n    </div>\n  );\n};\n\nexport default ShoppingPage;","import React, { useContext } from 'react';\nimport { PageContext } from '../context';\n\nfunction Tab(props) {\n  const { handlePageChange } = useContext(PageContext);\n\n  function switchTab(e) {\n    let target = e.target;\n    if (!target.classList.contains('tab-container')) return;\n    if (target.classList.contains('active')) return;\n\n    let list = target.parentNode;\n    let index = Array.prototype.indexOf.call(list.children, target);\n    handlePageChange(index);\n  }\n\n  return (\n    <div id={props.id} className={`tab-container ${props.active ? \"active\" : \"\"}`} onClick={switchTab}>\n          {props.name}\n    </div>\n  );\n}\n\nexport default Tab;","import React, { useContext } from 'react';\nimport { PageContext } from '../context';\nimport Tab from './Tab';\n\nconst PageTab = () => {\n  const { selectedPage } = useContext(PageContext);\n\n  return (\n    <div id=\"page-tab\">\n      <Tab\n        id=\"recipe-tab\"\n        name=\"Recipes\"\n        index=\"0\"\n        active={selectedPage === 0}\n      />\n      <Tab\n        id=\"shopping-tab\"\n        name=\"Shopping List\"\n        index=\"1\"\n        active={selectedPage === 1}\n      />\n    </div>\n  );\n};\n\nexport default PageTab;","import React, { useState, useEffect } from 'react';\nimport FadeIn from 'react-fade-in';\nimport RecipePage from './RecipePage';\nimport ShoppingPage from './ShoppingPage';\nimport PageTab from '../tab/PageTab';\nimport { PageContext } from '../context';\nimport '../../style/mainView.css';\n\nfunction MainView() {\n  const [selectedPage, setSelectedPage] = useState(0);\n  const [selectedRecipes, setSelectedRecipes] = useState(JSON.parse(localStorage.getItem('selectedRecipes')) || []);\n\n  const handlePageChange = (index) => {\n    setSelectedPage(index);\n  }\n\n  const handleSelectedRecipe = (recipe) => {\n    setSelectedRecipes([...selectedRecipes, recipe]);\n  }\n\n  const handleRemoveSelectedRecipe = (removeIdx) => {\n    let arrToFilter = [...selectedRecipes];\n    arrToFilter.splice(removeIdx, 1);\n    setSelectedRecipes(arrToFilter);\n  }\n\n  useEffect(() => {\n    let saveRecipes = JSON.stringify(selectedRecipes);\n    localStorage.setItem('selectedRecipes', saveRecipes);\n  }, [selectedRecipes]);\n\n  return (\n    <div className=\"main-container\">\n      <FadeIn transitionDuration={1000}>\n        <div id=\"main-heading\">\n          deipNOM\n        </div>\n        {selectedPage === 1 && \n          <PageContext.Provider value={{ selectedRecipes, handleRemoveSelectedRecipe }}>\n            <ShoppingPage/>\n          </PageContext.Provider>\n        }\n        {selectedPage === 0 && \n          <PageContext.Provider value={{handleSelectedRecipe }}>\n            <RecipePage/>\n          </PageContext.Provider>\n        }\n      </FadeIn>\n        <div id=\"main-footer\">\n          <PageContext.Provider value={{ selectedPage, handlePageChange }}>\n            <PageTab/>\n          </PageContext.Provider>\n        </div>\n    </div>\n  );\n}\n\nexport default MainView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainView from './components/main/MainView';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainView />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}