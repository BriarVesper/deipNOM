{"version":3,"sources":["components/context.js","components/recipes/subcom/SmallInput.js","components/recipes/subcom/BigInput.js","components/recipes/subcom/ImageUpload.js","components/recipes/NewRecipe.js","components/recipes/Recipe.js","components/recipes/RecipeList.js","components/recipes/Modal.EditRecipe.js","components/recipes/delegate.js","components/main/RecipePage.js","components/shopping/ShoppingList.js","components/shopping/ListRecipeItem.js","components/shopping/SelectedRecipes.js","components/main/ShoppingPage.js","components/tab/Tab.js","components/tab/PageTab.js","components/main/MainView.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","PageContext","SmallInput","placeholder","useState","value","setValue","className","type","onChange","e","target","BigInput","ImageUpload","handleAddThumbnail","fileInput","image","React","createRef","thumbnailPreview","resizeAndAddImage","file","Compressor","quality","maxWidth","maxHeight","success","res","img","files","imgURL","URL","createObjectURL","style","backgroundImage","display","ref","input","onClick","click","preview","NewRecipe","setImage","dispatchRecipeEvent","useContext","parseIngredients","ing","trim","length","split","map","item","parse","title","titleInput","description","descriptionInput","source","sourceInput","ingInput","instructions","instructionsInput","id","ingredients","JSON","stringify","newRecipe","thumbnail","Recipe","recipe","handleSelectedRecipe","backgroundPosition","backgroundSize","backgroundRepeat","_id","RecipeList","recipes","customStyles","content","top","left","right","bottom","marginRight","transform","width","Modal","setAppElement","EditRecipeModal","isOpen","parentIsOpen","handleSetIsOpen","recipeToEdit","modalIsOpen","setIsOpen","closeModal","useEffect","onAfterOpen","console","log","color","onRequestClose","contentLabel","_thumbnail","updatedRecipe","storage","localStorage","recipeDelegate","getAllRecipes","a","Promise","resolve","reject","getItem","submit","callback","errback","setItem","then","catch","error","remove","recipeToRemove","findIndex","Error","splice","edit","editRecipe","RecipePage","setRecipes","setRecipeToEdit","delegate","fetchRecipes","parsedRecipeList","fetchData","handleNewRecipe","data","fetchImageURL","imageURL","savedRecipe","err","uploadThumbnail","handleDeleteRecipe","removedRecipe","filter","handleOpenEditModal","find","handleEditRecipe","updatedList","updateRecipeListAfterEdit","updRecipeIndex","recipeCopy","Provider","ShoppingList","selectedRecipes","ingredientList","setIngredientList","ingArr","ingredientObj","reduce","pre","cur","concat","combine","prettifyIngredient","ingObj","unit","maxQty","ingredient","unitPlural","index","ListRecipeItem","toRemove","handleRemoveSelectedRecipe","SelectedRecipes","ShoppingPage","Tab","props","handlePageChange","active","classList","contains","list","parentNode","Array","prototype","indexOf","call","children","name","PageTab","selectedPage","MainView","setSelectedPage","setSelectedRecipes","saveRecipes","transitionDuration","removeIdx","arrToFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSACMA,EAAaC,0BACbC,EAAcD,0BAELD,I,OCaAG,MAff,YAAsC,IAAhBC,EAAe,EAAfA,YACpB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,MAAO,CAACD,EAVM,8BACV,uBACEE,UAAU,+BACVC,KAAK,OACLH,MAAOA,EACPI,SAAU,SAAAC,GAAMJ,EAASI,EAAEC,OAAON,QAClCF,YAAaA,QCONS,MAff,YAAoC,IAAhBT,EAAe,EAAfA,YAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,MAAO,CAACD,EAVM,8BACV,0BACEE,UAAU,6BACVC,KAAK,OACLH,MAAOA,EACPI,SAAU,SAAAC,GAAMJ,EAASI,EAAEC,OAAON,QAClCF,YAAaA,Q,wBC0CNU,MAhDf,YAAqD,IAA9BC,EAA6B,EAA7BA,mBACjBC,GAD8C,EAATC,MACzBC,IAAMC,aAClBC,EAAmBF,IAAMC,YAWvBE,EAAoB,SAACC,GACzB,IAAIC,IAAWD,EAAM,CACnBE,QAAS,GACTC,SAAU,IACVC,UAAW,IACXC,QAAS,SAACC,GACRb,EAAmBa,OASzB,OACI,sBAAKpB,UAAU,aAAf,UACE,uBACEC,KAAK,OACLD,UAAU,kBACVE,SA7Bc,SAACC,GACrB,IAAIkB,EAAMlB,EAAEC,OAAOkB,MAAM,GACzB,GAAKD,EAAL,CAEAR,EAAkBQ,GAClB,IAAIE,EAASC,IAAIC,gBAAgBJ,GACjCT,EAAiBc,MAAMC,gBAAkB,OAASJ,EAAS,MAwBrDG,MAAO,CAACE,QAAS,QACjBC,IAAK,SAAAC,GAAK,OAAItB,EAAYsB,KAE5B,qBACE9B,UAAU,uBACV+B,QAfgB,WACtBvB,EAAUwB,SAeJH,IAAK,SAAAI,GAAO,OAAIrB,EAAmBqB,GAHrC,SAKI,cAAC,IAAD,U,OCUGC,EAhDG,WAChB,MAA0BrC,mBAAS,IAAnC,mBAAOY,EAAP,KAAc0B,EAAd,KACQC,EAAwBC,qBAAW7C,GAAnC4C,oBAQFE,EAAmB,SAACC,GACxB,OAAKA,GAA6B,IAAtBA,EAAIC,OAAOC,OAEVF,EAAIG,MAAM,UAAUC,KAAI,SAAAC,GAAI,OAAIA,EAAKJ,UACnBG,KAAI,SAAAC,GAAI,OAAIC,gBAAMD,EAAM,UAHX,CAAC,KAW/C,EAA4BjD,EAAW,CAAEC,YAAa,UAAtD,mBAAOkD,EAAP,KAAcC,EAAd,KACA,EAAwCpD,EAAW,CAAEC,YAAa,gBAAlE,mBAAOoD,EAAP,KAAoBC,EAApB,KACA,EAA8BtD,EAAW,CAAEC,YAAa,WAAxD,mBAAOsD,EAAP,KAAeC,EAAf,KACA,EAAwB9C,EAAS,CAAET,YAAa,6CAAhD,mBAAO2C,EAAP,KAAYa,EAAZ,KACA,EAA0C/C,EAAS,CAAET,YAAa,iBAAlE,mBAAOyD,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKC,GAAG,aAAR,UACE,oBAAIvD,UAAU,oBAAd,4BACA,sBAAKA,UAAU,2BAAf,UACE,cAAC,EAAD,CAAaO,mBAdQ,SAACc,GAC1Bc,EAASd,IAagDZ,MAAOA,IAC5D,sBAAKT,UAAU,eAAf,UACG+C,EACAE,EACAE,QAGL,sBAAKnD,UAAU,2BAAf,UACGoD,EACAE,EACD,wBAAQvB,QAtCU,WACtB,IAAIyB,EAAcC,KAAKC,UAAUpB,EAAiBC,IAElDH,EAAoB,MAAO,CAAEuB,UADhB,CAAEb,QAAOE,cAAaE,SAAQM,cAAaH,gBACRO,UAAWnD,KAmCvD,+BCLOoD,EAxCA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACR1B,EAAwBC,qBAAW7C,GAAnC4C,oBACA2B,EAAyB1B,qBAAW3C,GAApCqE,qBAcR,OACE,sBAAK/D,UAAU,cACb0B,MAAO,CACLC,gBAAiB,OAASmC,EAAOrD,MAAQ,IACzCuD,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aALtB,UAQE,sBAAKlE,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,SAAwB8D,EAAOhB,QAC/B,wBAAQ9C,UAAU,2BAA2B+B,QAf1B,WACvBgC,EAAqBD,IAcjB,SAAwE,cAAC,IAAD,SAE1E,qBAAK9D,UAAU,SAAf,SACE,gCAAQ8D,EAAOd,gBAEjB,sBAAKhD,UAAU,SAAf,UACE,wBAAQ+B,QA7Ba,WACzBK,EAAoB,SAAU,CAAEmB,GAAIO,EAAOK,OA4BFnE,UAAU,oBAA/C,SAAmE,cAAC,IAAD,MACnE,wBAAQ+B,QA1BW,WACvBK,EAAoB,YAAa,CAAEmB,GAAIO,EAAOK,OAyBPnE,UAAU,oBAA7C,SAAiE,cAAC,IAAD,aCf1DoE,EAnBI,WACjB,IAAQC,EAAYhC,qBAAW7C,GAAvB6E,QACR,OACE,sBAAKd,GAAG,cAAR,UACE,qBAAKvD,UAAU,qBAAf,SACE,2CAEF,qBAAKA,UAAU,OAAf,SACGqE,EAAQ1B,KAAI,SAAAmB,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOK,c,iBCHlBG,G,MAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAO,WAIXC,IAAMC,cAAc,SAmFLC,MAlFf,YAA2F,IAErFrB,EAFoF,IAA/DsB,OAAQC,OAAuD,SAAjCC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,aAChEjD,EAAwBC,qBAAW7C,GAAnC4C,oBAER,EAAiCvC,mBAASsF,GAA1C,mBAAOG,EAAP,KAAoBC,EAApB,KAQA,SAASC,IACPJ,GAAgB,GARlBK,qBAAU,WAAQF,EAAUJ,KAAkB,CAACA,IAW/C,IAkBM7C,EAAmB,SAACC,GACxB,OAAKA,GAA6B,IAAtBA,EAAIC,OAAOC,OAEVF,EAAIG,MAAM,UAAUC,KAAI,SAAAC,GAAI,OAAIA,EAAKJ,UACnBG,KAAI,SAAAC,GAAI,OAAIC,gBAAMD,EAAM,UAHX,CAAC,KAW/C,EAA4BjD,EAAW,CAAEC,YAAayF,EAAavC,OAAS,UAA5E,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAwCpD,EAAW,CAAEC,YAAayF,EAAarC,aAAe,gBAA9F,mBAAOA,EAAP,KAAoBC,EAApB,KACA,EAA8BtD,EAAW,CAAEC,YAAayF,EAAanC,QAAU,WAA/E,mBAAOA,EAAP,KAAeC,EAAf,KACA,EAAwB9C,EAAS,CAAET,YAAa,gBAAhD,mBAAO2C,EAAP,KAAYa,EAAZ,KACA,EAA0C/C,EAAS,CAAET,YAAayF,EAAahC,cAAgB,iBAA/F,mBAAOA,EAAP,KAAqBC,EAArB,KAEA,OACE,8BACE,cAAC,IAAD,CACE4B,OAAQI,EACRI,YAjDN,WACEC,QAAQC,IAAIP,GACZzB,EAAUlC,MAAMmE,MAAQ,WAgDpBC,eAAgBN,EAChB9D,MAAO4C,EACPyB,aAAa,cALf,SAOE,sBAAKxC,GAAG,aAAR,UACE,qBAAIvD,UAAU,oBAAd,qBAA2CqF,EAAavC,SACxD,sBAAK9C,UAAU,2BAAf,UACE,qBAAKA,UAAU,uBAAuB6B,IAAK,SAACmE,GAAD,OAAiBpC,EAAYoC,GAAajE,QAtBpE,SAAC5B,GAC1BwF,QAAQC,IAAI,SAqBJ,SAAkH,cAAC,IAAD,MAClH,sBAAK5F,UAAU,eAAf,UACG+C,EACAE,EACAE,QAGL,sBAAKnD,UAAU,2BAAf,UACGoD,EACAE,EACD,wBAAQvB,QA1DO,WACvB,IAAIyB,EAA6B,IAAfjB,EAAIE,OAAegB,KAAKC,UAAUpB,EAAiBC,IAAQkB,KAAKC,UAAU2B,EAAa7B,aAIrGyC,EAAa,2BACZZ,GADY,IAEfvC,MAAOA,GAASuC,EAAavC,MAC7BE,YAAaA,GAAeqC,EAAarC,YACzCE,OAAQA,GAAUmC,EAAanC,OAC/BM,YAAaA,EACbH,aAAcA,GAAgBgC,EAAahC,eAG7CjB,EAAoB,OAAQ,CAAE6D,cAAeA,IAC7CT,KA2CQ,yBACA,wBAAQxF,UAAU,gBAAgB+B,QAASyD,EAA3C,+B,SCnGNU,EAAUC,aAkEDC,EAjEQ,CAKrBC,cAAc,WAAD,4BAAE,sBAAAC,EAAA,+EACN,IAAIC,SAAQ,SAACC,EAASC,GAC3BD,EAAQ/C,KAAKZ,MAAMsD,aAAaO,QAAQ,iBAF7B,2CAAF,kDAAC,GAWdC,OAAO,WAAD,4BAAE,WAAO7C,EAAQ8C,EAAUC,GAAzB,SAAAP,EAAA,+EACC,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIpC,EAAU,EAAKgC,gBACnBhC,EAAO,sBAAOA,GAAP,CAAgBP,IACvB0C,EAAQN,EAAQY,QAAQrD,KAAKC,UAAUW,QAExC0C,MAAK,SAAA3F,GAASwF,GAAYA,EAASxF,MACnC4F,OAAM,SAAAC,GAAWJ,GAAWA,EAAQI,OAP/B,2CAAF,uDAAC,GAePC,OAAO,WAAD,4BAAE,WAAO3D,EAAIqD,EAAUC,GAArB,SAAAP,EAAA,+EACC,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIpC,EAAU,EAAKgC,gBACfc,EAAiB9C,EAAQ+C,WAAU,SAAAtD,GAAM,OAAIA,EAAOK,MAAQZ,MACxC,IAApB4D,GACFV,EAAO,IAAIY,MAAM,iBAEnBhD,EAAQiD,OAAOH,EAAgB,GAC/BX,EAAQN,EAAQY,QAAQ,UAAWrD,KAAKC,UAAUW,QAEnD0C,MAAK,SAAA3F,GAASwF,GAAYA,EAASxF,MACnC4F,OAAM,SAAAC,GAAWJ,GAAWA,EAAQI,OAX/B,2CAAF,uDAAC,GAmBNM,KAAK,WAAD,4BAAE,WAAOzD,EAAQ8C,EAAUC,GAAzB,SAAAP,EAAA,+EACE,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIpC,EAAU,EAAKgC,gBACfhB,EAAehB,EAAQ+C,WAAU,SAAAI,GAAU,OAAIA,EAAWrD,MAAQL,EAAOK,QACvD,IAAlBkB,GACFoB,EAAO,IAAIY,MAAM,iBAEnBhD,EAAQgB,GAAgBvB,EACxB0C,EAAQN,EAAQY,QAAQ,UAAWrD,KAAKC,UAAUW,QAEnD0C,MAAK,SAAA3F,GAASwF,GAAYA,EAASxF,MACnC4F,OAAM,SAAAC,GAAWJ,GAAWA,EAAQI,OAXhC,2CAAF,uDAAC,ICyEOQ,MAnHf,WACE,MAAgC5H,mBAAS,IAAzC,mBAAQwE,EAAR,KAAiBqD,EAAjB,KACA,EAA4B7H,oBAAS,GAArC,mBAAOqF,EAAP,KAAeK,EAAf,KACA,EAAwC1F,mBAAS,IAAjD,mBAAOwF,EAAP,KAAqBsC,EAArB,KACMvC,EAAkB,kBAAMG,GAAWL,IAEzCO,qBAAU,WAAM,4CACd,8BAAAa,EAAA,sEAC2BsB,EAASvB,gBADpC,OACMwB,EADN,OAGMC,GADaD,GAAgB,IACClF,KAAI,SAAAmB,GAAM,kCAAUA,GAAV,IAAkBN,YAAaC,KAAKZ,MAAMiB,EAAON,kBAC7FkE,EAAWI,GAJb,4CADc,uBAAC,WAAD,wBAOdC,KACC,IAEH,IAmBMC,EAAe,uCAAG,WAAOC,GAAP,mBAAA3B,EAAA,yDAClB3C,EAAYsE,EAAKtE,UACjBC,EAAYqE,EAAKrE,UAChBD,EAAUb,OAAUa,EAAUb,MAAMN,OAHnB,yCAGkC,MAHlC,WAKlBoB,EALkB,gCAMCsE,EAActE,GANf,OAMhBuE,EANgB,OAOpBxE,EAAUlD,MAAQ0H,EAPE,OAUtBP,EAASjB,OAAO,CACd7C,OAAQH,IAER,SAACvC,GACC,IAAIgH,EAAchH,EAAI6G,KACtBG,EAAY5E,YAAcC,KAAKZ,MAAMuF,EAAY5E,aACjDkE,EAAW,GAAD,mBAAMrD,GAAN,CAAe+D,KACzBzC,QAAQC,IAAIxE,MAEd,SAACiH,GAAU1C,QAAQC,IAAIyC,MAnBH,4CAAH,sDAuBfH,EAAa,uCAAG,WAAOpH,GAAP,SAAAwF,EAAA,+EACbsB,EAASU,gBAAgBxH,IADZ,2CAAH,sDAIbyH,EAAqB,SAACN,GAC1BL,EAASV,OACPe,EAAK1E,IACL,SAACnC,GACC,IAAIoH,EAAgBpH,EAAI6G,KACxBP,EAAWrD,EAAQoE,QAAO,SAAA3E,GAAM,OAAIA,EAAOK,MAAQqE,EAAcrE,WAEnE,SAACkE,GAAU1C,QAAQC,IAAIyC,OAIrBK,EAAsB,SAACT,GAC3B,IAAIT,EAAanD,EAAQsE,MAAK,SAAA7E,GAAM,OAAIA,EAAOK,MAAQ8D,EAAK1E,MAC5DoE,EAAgBH,GAChBpC,KAGIwD,EAAmB,SAACX,GACxB,IAAIhC,EAAgBgC,EAAKhC,cAEzB2B,EAASL,KAAK,CACZzD,OAAQmC,IAER,SAAC7E,GACC,IAAI6E,EAAgB7E,EAAI6G,KACxBhC,EAAczC,YAAcC,KAAKZ,MAAMoD,EAAczC,aACrD,IAAIqF,EAAcC,EAA0B7C,GAC5CyB,EAAWmB,GACXlD,QAAQC,IAAIxE,MAEd,SAACiH,GAAU1C,QAAQC,IAAIyC,OAIrBS,EAA4B,SAAC7C,GACjC,IAAI8C,EAAiB1E,EAAQ+C,WAAU,SAAAtD,GAAM,OAAIA,EAAOK,MAAQ8B,EAAc9B,OAC1E6E,EAAU,YAAO3E,GAErB,OADA2E,EAAWD,GAAkB9C,EACtB+C,GAGT,OACE,qBAAKzF,GAAG,cAAR,SACE,eAAC,EAAW0F,SAAZ,CAAqBnJ,MAAO,CAAEuE,UAASjC,oBAzFf,SAACnC,EAAMgI,GACjC,OAAQhI,GACN,IAAK,MAEH,YADA+H,EAAgBC,GAElB,IAAK,SAEH,YADAM,EAAmBN,GAErB,IAAK,YAEH,YADAS,EAAoBT,GAEtB,IAAK,OAEH,YADAW,EAAiBX,GAEnB,QACE,UA0EF,UACE,cAAC,EAAD,CAAiB/C,OAAQA,EAAQE,gBAAiBA,EAAiBC,aAAcA,IACjF,cAAC,EAAD,IACA,cAAC,EAAD,UC7DO6D,EApDM,WACnB,IAAQC,EAAoB9G,qBAAW3C,GAA/ByJ,gBACR,EAA4CtJ,mBAAS,IAArD,mBAAOuJ,EAAP,KAAuBC,EAAvB,KAEA5D,qBAAU,WACR,IAAI6D,EAAS,GACb,GAA+B,IAA3BH,EAAgB1G,OAAc,CAChC,IAAI8G,EAAgBJ,EAAgBxG,KAAI,SAAAmB,GACtC,OAAOA,EAAON,eACbgG,QAAO,SAACC,EAAKC,GAEd,OAAOD,EAAIE,OAAOD,MACjB/G,KAAI,SAACJ,GACN,OAAOA,KAGT+G,EAD0BM,kBAAQL,GACL5G,KAAI,SAAAJ,GAC/B,OAAOsH,EAAmBtH,MAI9B8G,EAAkBC,KAEjB,CAACH,IAEJ,IAAMU,EAAqB,SAACC,GAW1B,OATIA,EAAOC,KAEwB,IAAlBD,EAAOE,OACpBF,EAAOE,OAAS,IAAMF,EAAOC,KAAO,OAASD,EAAOG,WACpDH,EAAOE,OAAS,IAAMF,EAAOI,WAAa,OAASJ,EAAOG,WAG7CH,EAAOE,OAAS,IAAMF,EAAOG,YAKhD,OACE,sBAAK1G,GAAG,gBAAR,UACE,oBAAIvD,UAAU,SAAd,2BACA,uBACA,qBAAKA,UAAU,OAAf,SACE,6BACGoJ,EAAezG,KAAI,SAACsH,EAAYE,GAAb,OAAuB,6BAAiBF,GAARE,cC7B/CC,EAjBQ,SAAC,GAA0B,IAAxBtG,EAAuB,EAAvBA,OAAQuG,EAAe,EAAfA,SACxBC,EAA+BjI,qBAAW3C,GAA1C4K,2BAMR,OACE,qBAAKtK,UAAU,uBAAf,SACE,gCACE,wBAAQ+B,QAPO,WACnBuI,EAA2BD,IAMQrK,UAAU,oBAAzC,oBACC8D,EAAOhB,YCIDyH,EAdS,WACtB,IAAQpB,EAAoB9G,qBAAW3C,GAA/ByJ,gBAER,OACE,sBAAK5F,GAAG,uBAAR,UACE,oBAAIvD,UAAU,SAAd,8BACA,uBACA,qBAAKA,UAAU,OAAf,SACGmJ,EAAgBxG,KAAI,SAACmB,EAAQqG,GAAT,OAAmB,cAAC,EAAD,CAA4BrG,OAAQA,EAAQuG,SAAUF,GAAjCA,YCGtDK,G,MATM,WACnB,OACE,sBAAKjH,GAAG,gBAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCaSkH,MApBf,SAAaC,GACX,IAAQC,EAAqBtI,qBAAW3C,GAAhCiL,iBAYR,OACE,qBAAKpH,GAAImH,EAAMnH,GAAIvD,UAAS,wBAAmB0K,EAAME,OAAS,SAAW,IAAM7I,QAXjF,SAAmB5B,GACjB,IAAIC,EAASD,EAAEC,OACf,GAAKA,EAAOyK,UAAUC,SAAS,mBAC3B1K,EAAOyK,UAAUC,SAAS,UAA9B,CAEA,IAAIC,EAAO3K,EAAO4K,WACdb,EAAQc,MAAMC,UAAUC,QAAQC,KAAKL,EAAKM,SAAUjL,GACxDuK,EAAiBR,KAIjB,SACOO,EAAMY,QCOFC,EArBC,WACd,IAAQC,EAAiBnJ,qBAAW3C,GAA5B8L,aAER,OACE,sBAAKjI,GAAG,WAAR,UACE,cAAC,EAAD,CACEA,GAAG,aACH+H,KAAK,UACLnB,MAAM,IACNS,OAAyB,IAAjBY,IAEV,cAAC,EAAD,CACEjI,GAAG,eACH+H,KAAK,gBACLnB,MAAM,IACNS,OAAyB,IAAjBY,Q,MCsCDC,MAjDf,WACE,MAAwC5L,mBAAS,GAAjD,mBAAO2L,EAAP,KAAqBE,EAArB,KACA,EAA8C7L,mBAAS4D,KAAKZ,MAAMsD,aAAaO,QAAQ,qBAAuB,IAA9G,mBAAOyC,EAAP,KAAwBwC,EAAxB,KAqBA,OALAlG,qBAAU,WACR,IAAImG,EAAcnI,KAAKC,UAAUyF,GACjChD,aAAaW,QAAQ,kBAAmB8E,KACvC,CAACzC,IAGF,sBAAKnJ,UAAU,iBAAf,UACE,eAAC,IAAD,CAAQ6L,mBAAoB,IAA5B,UACE,qBAAKtI,GAAG,eAAR,qBAGkB,IAAjBiI,GACC,cAAC9L,EAAYuJ,SAAb,CAAsBnJ,MAAO,CAAEqJ,kBAAiBmB,2BAlBrB,SAACwB,GAClC,IAAIC,EAAW,YAAO5C,GACtB4C,EAAYzE,OAAOwE,EAAW,GAC9BH,EAAmBI,KAeb,SACE,cAAC,EAAD,MAGc,IAAjBP,GACC,cAAC9L,EAAYuJ,SAAb,CAAsBnJ,MAAO,CAACiE,qBA3BT,SAACD,GAC5B6H,EAAmB,GAAD,mBAAKxC,GAAL,CAAsBrF,OA0BlC,SACE,cAAC,EAAD,SAIJ,qBAAKP,GAAG,cAAR,SACE,cAAC7D,EAAYuJ,SAAb,CAAsBnJ,MAAO,CAAE0L,eAAcb,iBArC5B,SAACR,GACxBuB,EAAgBvB,KAoCV,SACE,cAAC,EAAD,YCtCG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.37e3391e.chunk.js","sourcesContent":["import { createContext } from 'react';\nconst AppContext = createContext();\nconst PageContext = createContext();\nexport { PageContext };\nexport default AppContext;\n","import React, { useState } from 'react';\n\nfunction SmallInput({ placeholder }) {\n  const [value, setValue] = useState(\"\");\n  const input = <div>\n      <input\n        className=\"add-recipe-input small-input\"\n        type=\"text\" \n        value={value} \n        onChange={e => {setValue(e.target.value)}}\n        placeholder={placeholder}\n      />\n    </div>\n\n  return [value, input];\n}\n\nexport default SmallInput;","import React, { useState } from 'react';\n\nfunction BigInput({ placeholder }) {\n  const [value, setValue] = useState(\"\");\n  const input = <div>\n      <textarea\n        className=\"add-recipe-input big-input\"\n        type=\"text\" \n        value={value} \n        onChange={e => {setValue(e.target.value)}}\n        placeholder={placeholder}\n      />\n    </div>\n\n  return [value, input];\n}\n\nexport default BigInput;","import React from 'react';\nimport Compressor from 'compressorjs';\nimport { FaPlusCircle} from 'react-icons/fa';\n\nfunction ImageUpload({ handleAddThumbnail, image }) {\n  let fileInput = React.createRef();\n  let thumbnailPreview = React.createRef();\n\n  const onChangeImage = (e) => {\n    let img = e.target.files[0];\n    if (!img) return;\n    \n    resizeAndAddImage(img);\n    let imgURL = URL.createObjectURL(img);\n    thumbnailPreview.style.backgroundImage = 'url(' + imgURL + ')';    \n  }\n\n  const resizeAndAddImage = (file) => {\n    new Compressor(file, {\n      quality: 0.5,\n      maxWidth: 400,\n      maxHeight: 400,\n      success: (res) => {\n        handleAddThumbnail(res);\n      }\n    })\n  }\n\n  const clickUploadFile = () => {\n    fileInput.click();\n  }\n\n  return (\n      <div className='form-group'>\n        <input \n          type='file'\n          className='thumbnail-input'\n          onChange={onChangeImage}\n          style={{display: \"none\"}}\n          ref={input => fileInput = input}\n        />\n        <div \n          className=\"add-recipe-thumbnail\" \n          onClick={clickUploadFile}\n          ref={preview => thumbnailPreview = preview}\n          >\n            <FaPlusCircle/>\n          </div>\n      </div>\n  );\n}\n\nexport default ImageUpload;","import React, { useContext, useState } from 'react';\nimport AppContext from '../context';\nimport SmallInput from './subcom/SmallInput';\nimport BigInput from './subcom/BigInput';\nimport ImageUpload from './subcom/ImageUpload';\n\nimport { parse } from 'recipe-ingredient-parser-v3';\n\nconst NewRecipe = () => {\n  const [image, setImage] = useState(\"\");\n  const { dispatchRecipeEvent } = useContext(AppContext);\n\n  const handleAddRecipe = () => {\n    let ingredients = JSON.stringify(parseIngredients(ing));\n    let recipe = { title, description, source, ingredients, instructions };\n    dispatchRecipeEvent('ADD', { newRecipe: recipe, thumbnail: image });\n  };\n\n  const parseIngredients = (ing) => {\n    if (!ing || ing.trim().length === 0) return [{}];\n\n    let ingArr = ing.split(/[\\n,]+/).map(item => item.trim());\n    let parsedIngredients = ingArr.map(item => parse(item, 'eng'));\n    return parsedIngredients;\n  };\n\n  const handleAddThumbnail = (img) => {\n    setImage(img);\n  }\n\n  const [title, titleInput] = SmallInput({ placeholder: \"title\" });\n  const [description, descriptionInput] = SmallInput({ placeholder: \"description\" });\n  const [source, sourceInput] = SmallInput({ placeholder: \"source\" });\n  const [ing, ingInput] = BigInput({ placeholder: \"ingredients (comma or newline separated)\" });\n  const [instructions, instructionsInput] = BigInput({ placeholder: \"instructions\" });\n\n  return (\n    <div id=\"add-recipe\">\n      <h3 className=\"add-recipe-header\">Add New Recipe</h3>\n      <div className=\"add-recipe-top-container\">\n        <ImageUpload handleAddThumbnail={handleAddThumbnail} image={image}/>\n        <div className=\"small-inputs\">\n          {titleInput}\n          {descriptionInput}\n          {sourceInput}\n        </div>\n      </div>\n      <div className=\"add-recipe-btm-container\">\n        {ingInput}\n        {instructionsInput}\n        <button onClick={handleAddRecipe}>Add Recipe</button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewRecipe;","import { useContext } from 'react';\nimport AppContext, { PageContext } from '../context';\n\nimport { FaPlus, FaTrashAlt, FaFeatherAlt } from \"react-icons/fa\";\n\nconst Recipe = ({ recipe }) => {\n  const { dispatchRecipeEvent } = useContext(AppContext);\n  const { handleSelectedRecipe } = useContext(PageContext);\n\n  const handleRemoveRecipe = () => {\n    dispatchRecipeEvent('REMOVE', { id: recipe._id });\n  };\n\n  const handleEditRecipe = () => {\n    dispatchRecipeEvent('OPEN_EDIT', { id: recipe._id });\n  };\n\n  const handlePickRecipe = () => {\n    handleSelectedRecipe(recipe);\n  }\n\n  return (\n    <div className=\"recipe-item\"\n      style={{\n        backgroundImage: \"url(\" + recipe.image + \")\",\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'        \n      }}\n    >\n      <div className=\"header\">\n        <div className=\"title\">{recipe.title}</div>\n        <button className=\"select icon-button-small\" onClick={handlePickRecipe}><FaPlus/></button>\n      </div>\n      <div className=\"middle\">\n        <small>{recipe.description}</small>\n      </div>\n      <div className=\"footer\">\n        <button onClick={handleRemoveRecipe} className=\"icon-button-small\"><FaTrashAlt/></button>\n        <button onClick={handleEditRecipe} className=\"icon-button-small\"><FaFeatherAlt/></button>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;","\nimport React, { useContext } from 'react';\nimport AppContext from '../context';\nimport Recipe from './Recipe';\n\nconst RecipeList = () => {\n  const { recipes } = useContext(AppContext);\n  return (\n    <div id=\"recipe-list\">\n      <div className=\"recipe-list-header\">\n        <h3>Recipes</h3>\n      </div>\n      <div className=\"list\">\n        {recipes.map(recipe => \n          <Recipe \n            key={recipe._id} \n            recipe={recipe} \n          />)\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;","import React, { useState, useEffect, useContext } from 'react';\nimport Modal from 'react-modal';\n\nimport SmallInput from './subcom/SmallInput';\nimport BigInput from './subcom/BigInput';\nimport AppContext from '../context';\n\nimport { FaPlusCircle } from 'react-icons/fa';\nimport { parse } from 'recipe-ingredient-parser-v3';\n\nimport '../../style/Recipe.css';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '450px'\n  },\n};\n\nModal.setAppElement('#root');\nfunction EditRecipeModal({ isOpen: parentIsOpen = false, handleSetIsOpen, recipeToEdit }) {\n  const { dispatchRecipeEvent } = useContext(AppContext);\n  let thumbnail;\n  const [modalIsOpen, setIsOpen] = useState(parentIsOpen);\n  useEffect(() => { setIsOpen(parentIsOpen); }, [parentIsOpen]);\n\n  function afterOpenModal() {\n    console.log(recipeToEdit);\n    thumbnail.style.color = '#cb9eff';\n  }\n\n  function closeModal() {\n    handleSetIsOpen(false);\n  }\n\n  const handleEditRecipe = () => {\n    let ingredients = ing.length !== 0 ? JSON.stringify(parseIngredients(ing)) : JSON.stringify(recipeToEdit.ingredients);\n\n    // Is there a better way to do this?\n    // Only update the fields that have been modified, keep everything else as it was\n    let updatedRecipe = {\n      ...recipeToEdit,\n      title: title || recipeToEdit.title,\n      description: description || recipeToEdit.description,\n      source: source || recipeToEdit.source,\n      ingredients: ingredients,\n      instructions: instructions || recipeToEdit.instructions,\n    }\n\n    dispatchRecipeEvent('EDIT', { updatedRecipe: updatedRecipe });\n    closeModal();\n  };\n\n  const parseIngredients = (ing) => {\n    if (!ing || ing.trim().length === 0) return [{}];\n\n    let ingArr = ing.split(/[\\n,]+/).map(item => item.trim());\n    let parsedIngredients = ingArr.map(item => parse(item, 'eng'));\n    return parsedIngredients;\n  };\n\n  const handleAddThumbnail = (e) => {\n    console.log(\"TODO\");\n  }\n\n  const [title, titleInput] = SmallInput({ placeholder: recipeToEdit.title || \"title\" });\n  const [description, descriptionInput] = SmallInput({ placeholder: recipeToEdit.description || \"description\" });\n  const [source, sourceInput] = SmallInput({ placeholder: recipeToEdit.source || \"source\" });\n  const [ing, ingInput] = BigInput({ placeholder: \"ingredients\" });\n  const [instructions, instructionsInput] = BigInput({ placeholder: recipeToEdit.instructions || \"instructions\" });\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edit Recipe\"\n      >\n        <div id=\"add-recipe\">\n          <h3 className=\"add-recipe-header\">Editing {recipeToEdit.title}</h3>\n          <div className=\"add-recipe-top-container\">\n            <div className=\"add-recipe-thumbnail\" ref={(_thumbnail) => (thumbnail = _thumbnail)} onClick={handleAddThumbnail}><FaPlusCircle/></div>\n            <div className=\"small-inputs\">\n              {titleInput}\n              {descriptionInput}\n              {sourceInput}\n            </div>\n          </div>\n          <div className=\"add-recipe-btm-container\">\n            {ingInput}\n            {instructionsInput}\n            <button onClick={handleEditRecipe}>Edit Recipe</button>\n            <button className=\"cancel-button\" onClick={closeModal}>Cancel</button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default EditRecipeModal;","const storage = localStorage;\nconst recipeDelegate = {\n\n  /**\n   * @returns {Object} List of ToDo items\n   */\n  getAllRecipes: async () => {\n    return new Promise((resolve, reject) => {\n      resolve(JSON.parse(localStorage.getItem('recipes')));\n    });\n  },\n  /**\n   * Creation of new recipe item\n   * @param {Object} recipe Object consisting of all recipe information to save\n   * @param {function} callback Response handler\n   * @param {function} errback Error handler\n   */\n  submit: async (recipe, callback, errback) => {\n    return new Promise((resolve, reject) => {\n      let recipes = this.getAllRecipes();\n      recipes = [...recipes, recipe];\n      resolve(storage.setItem(JSON.stringify(recipes)));\n    })\n    .then(res => { callback && callback(res); })\n    .catch(error => { errback && errback(error); });\n  },\n  /**\n   * Deletion of Recipe item\n   * @param {String} id The id of the item to delete\n   * @param {function} callback Response handler\n   * @param {function} errback Error handler\n   */\n  remove: async (id, callback, errback) => {\n    return new Promise((resolve, reject) => {\n      let recipes = this.getAllRecipes();\n      let recipeToRemove = recipes.findIndex(recipe => recipe._id === id);\n      if (recipeToRemove === -1)\n        reject(new Error('ID not found'));\n\n      recipes.splice(recipeToRemove, 1);\n      resolve(storage.setItem('recipes', JSON.stringify(recipes)));\n    })\n    .then(res => { callback && callback(res); })\n    .catch(error => { errback && errback(error); });\n  },\n  /**\n   * Updating of a Recipe item\n   * @param {Object} recipe The id of the item to delete\n   * @param {function} callback Response handler\n   * @param {function} errback Error handler\n   */\n   edit: async (recipe, callback, errback) => {\n    return new Promise((resolve, reject) => {\n      let recipes = this.getAllRecipes();\n      let recipeToEdit = recipes.findIndex(editRecipe => editRecipe._id === recipe._id);\n      if (recipeToEdit === -1)\n        reject(new Error('ID not found'));\n\n      recipes[recipeToEdit] = recipe;\n      resolve(storage.setItem('recipes', JSON.stringify(recipes)));\n    })\n    .then(res => { callback && callback(res); })\n    .catch(error => { errback && errback(error); });\n  },\n};\n\nexport default recipeDelegate;","import React, { useState, useEffect } from 'react';\nimport NewRecipe from '../recipes/NewRecipe';\nimport RecipeList from '../recipes/RecipeList';\nimport EditRecipeModal from '../recipes/Modal.EditRecipe';\nimport AppContext from '../context';\nimport delegate from '../recipes/delegate';\n\nimport '../../style/Recipe.css';\n\nfunction RecipePage() {\n  const [ recipes, setRecipes ] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [recipeToEdit, setRecipeToEdit] = useState({});\n  const handleSetIsOpen = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    async function fetchData() {\n      let fetchRecipes = await delegate.getAllRecipes();\n      let recipeList = fetchRecipes || [];\n      let parsedRecipeList = recipeList.map(recipe => ({ ...recipe, ingredients: JSON.parse(recipe.ingredients) }));\n      setRecipes(parsedRecipeList);  \n    }\n    fetchData();\n  }, []);\n\n  const dispatchRecipeEvent = (type, data) => {\n    switch (type) {\n      case 'ADD':\n        handleNewRecipe(data);\n        return;\n      case 'REMOVE':\n        handleDeleteRecipe(data);\n        return;\n      case 'OPEN_EDIT':\n        handleOpenEditModal(data);\n        return;\n      case 'EDIT':\n        handleEditRecipe(data);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleNewRecipe = async (data) => {\n    let newRecipe = data.newRecipe;\n    let thumbnail = data.thumbnail;\n    if (!newRecipe.title || !newRecipe.title.trim()) return null;\n\n    if (thumbnail) {\n      let imageURL = await fetchImageURL(thumbnail);\n      newRecipe.image = imageURL;\n    }\n\n    delegate.submit({\n      recipe: newRecipe\n    }, \n      (res) => {\n        let savedRecipe = res.data;\n        savedRecipe.ingredients = JSON.parse(savedRecipe.ingredients);\n        setRecipes([ ...recipes, savedRecipe ]); \n        console.log(res);\n      },\n      (err) => { console.log(err); }\n    );\n  }\n\n  const fetchImageURL = async (file) => {\n    return delegate.uploadThumbnail(file);\n  }\n\n  const handleDeleteRecipe = (data) => {\n    delegate.remove(\n      data.id, \n      (res) => { \n        let removedRecipe = res.data;\n        setRecipes(recipes.filter(recipe => recipe._id !== removedRecipe._id));\n       },\n      (err) => { console.log(err); }\n    );\n  }\n\n  const handleOpenEditModal = (data) => {\n    let editRecipe = recipes.find(recipe => recipe._id === data.id)\n    setRecipeToEdit(editRecipe);\n    handleSetIsOpen(!isOpen);\n  }\n\n  const handleEditRecipe = (data) => {\n    let updatedRecipe = data.updatedRecipe;\n\n    delegate.edit({\n      recipe: updatedRecipe\n    }, \n      (res) => {\n        let updatedRecipe = res.data;\n        updatedRecipe.ingredients = JSON.parse(updatedRecipe.ingredients);\n        let updatedList = updateRecipeListAfterEdit(updatedRecipe);\n        setRecipes(updatedList); \n        console.log(res);\n      },\n      (err) => { console.log(err); }\n    );\n  }\n\n  const updateRecipeListAfterEdit = (updatedRecipe) => {\n    let updRecipeIndex = recipes.findIndex(recipe => recipe._id === updatedRecipe._id);\n    let recipeCopy = [...recipes];\n    recipeCopy[updRecipeIndex] = updatedRecipe;\n    return recipeCopy;\n  }\n\n  return (\n    <div id=\"recipe-page\">\n      <AppContext.Provider value={{ recipes, dispatchRecipeEvent }}>\n        <EditRecipeModal isOpen={isOpen} handleSetIsOpen={handleSetIsOpen} recipeToEdit={recipeToEdit}/>\n        <NewRecipe />\n        <RecipeList />\n      </AppContext.Provider>\n    </div>\n  );\n\n}\n\nexport default RecipePage;","import React, { useContext, useEffect, useState } from 'react';\nimport { PageContext } from '../context';\nimport { combine } from 'recipe-ingredient-parser-v3';\n\nconst ShoppingList = () => {\n  const { selectedRecipes } = useContext(PageContext);\n  const [ingredientList, setIngredientList] = useState([]);\n\n  useEffect(() => {\n    let ingArr = [];\n    if (selectedRecipes.length !== 0) {\n      let ingredientObj = selectedRecipes.map(recipe => {\n        return recipe.ingredients;\n      }).reduce((pre, cur) => {\n        // Concat all the different recipe ingredient arrays into one big array\n        return pre.concat(cur);\n      }).map((ing) => {\n        return ing;\n      });\n      let combinedIngredients = combine(ingredientObj);\n      ingArr = combinedIngredients.map(ing => {\n        return prettifyIngredient(ing);\n      });\n    }\n\n    setIngredientList(ingArr);\n    return;\n  }, [selectedRecipes]);\n\n  const prettifyIngredient = (ingObj) => {\n    var prettyString;\n    if (ingObj.unit) {\n      // 1 cup of flour\n      prettyString = ingObj.maxQty === 1 ? \n        ingObj.maxQty + \" \" + ingObj.unit + \" of \" + ingObj.ingredient /*1 cup of flour*/ :\n        ingObj.maxQty + \" \" + ingObj.unitPlural + \" of \" + ingObj.ingredient; /*4 cups of flour*/\n    } else {\n      // 1 carrot\n      prettyString = ingObj.maxQty + \" \" + ingObj.ingredient;\n    }\n    return prettyString;\n  }\n\n  return (\n    <div id=\"shopping-list\">\n      <h3 className=\"header\">Shopping List</h3>\n      <hr/>\n      <div className=\"list\">\n        <ul>\n          {ingredientList.map((ingredient, index) => <li key={index}>{ingredient}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ShoppingList;","import React, { useContext } from 'react';\nimport { PageContext } from '../context';\n\nconst ListRecipeItem = ({ recipe, toRemove }) => {\n  const { handleRemoveSelectedRecipe } = useContext(PageContext);\n\n  const handleRemove = () => {\n    handleRemoveSelectedRecipe(toRemove);\n  }\n\n  return (\n    <div className=\"selected-recipe-item\">\n      <div>\n        <button onClick={handleRemove} className=\"text-button-small\">remove</button>\n        {recipe.title}\n      </div>\n    </div>\n  );\n};\n\nexport default ListRecipeItem;","import React, { useContext } from 'react';\nimport ListRecipeItem from './ListRecipeItem';\nimport { PageContext } from '../context';\n\nconst SelectedRecipes = () => {\n  const { selectedRecipes } = useContext(PageContext);\n\n  return (\n    <div id=\"selected-recipe-list\">\n      <h3 className=\"header\">Selected Recipes</h3>\n      <hr/>\n      <div className=\"list\">\n        {selectedRecipes.map((recipe, index) => <ListRecipeItem key={index} recipe={recipe} toRemove={index}/>)}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedRecipes;","import React from 'react';\nimport ShoppingList from '../shopping/ShoppingList';\nimport SelectedRecipes from '../shopping/SelectedRecipes';\n\nimport '../../style/Shopping.css';\n\nconst ShoppingPage = () => {\n  return (\n    <div id=\"shopping-page\">\n      <ShoppingList/>\n      <SelectedRecipes/>\n    </div>\n  );\n};\n\nexport default ShoppingPage;","import React, { useContext } from 'react';\nimport { PageContext } from '../context';\n\nfunction Tab(props) {\n  const { handlePageChange } = useContext(PageContext);\n\n  function switchTab(e) {\n    let target = e.target;\n    if (!target.classList.contains('tab-container')) return;\n    if (target.classList.contains('active')) return;\n\n    let list = target.parentNode;\n    let index = Array.prototype.indexOf.call(list.children, target);\n    handlePageChange(index);\n  }\n\n  return (\n    <div id={props.id} className={`tab-container ${props.active ? \"active\" : \"\"}`} onClick={switchTab}>\n          {props.name}\n    </div>\n  );\n}\n\nexport default Tab;","import React, { useContext } from 'react';\nimport { PageContext } from '../context';\nimport Tab from './Tab';\n\nconst PageTab = () => {\n  const { selectedPage } = useContext(PageContext);\n\n  return (\n    <div id=\"page-tab\">\n      <Tab\n        id=\"recipe-tab\"\n        name=\"Recipes\"\n        index=\"0\"\n        active={selectedPage === 0}\n      />\n      <Tab\n        id=\"shopping-tab\"\n        name=\"Shopping List\"\n        index=\"1\"\n        active={selectedPage === 1}\n      />\n    </div>\n  );\n};\n\nexport default PageTab;","import React, { useState, useEffect } from 'react';\nimport FadeIn from 'react-fade-in';\nimport RecipePage from './RecipePage';\nimport ShoppingPage from './ShoppingPage';\nimport PageTab from '../tab/PageTab';\nimport { PageContext } from '../context';\nimport '../../style/mainView.css';\n\nfunction MainView() {\n  const [selectedPage, setSelectedPage] = useState(0);\n  const [selectedRecipes, setSelectedRecipes] = useState(JSON.parse(localStorage.getItem('selectedRecipes')) || []);\n\n  const handlePageChange = (index) => {\n    setSelectedPage(index);\n  }\n\n  const handleSelectedRecipe = (recipe) => {\n    setSelectedRecipes([...selectedRecipes, recipe]);\n  }\n\n  const handleRemoveSelectedRecipe = (removeIdx) => {\n    let arrToFilter = [...selectedRecipes];\n    arrToFilter.splice(removeIdx, 1);\n    setSelectedRecipes(arrToFilter);\n  }\n\n  useEffect(() => {\n    let saveRecipes = JSON.stringify(selectedRecipes);\n    localStorage.setItem('selectedRecipes', saveRecipes);\n  }, [selectedRecipes]);\n\n  return (\n    <div className=\"main-container\">\n      <FadeIn transitionDuration={1000}>\n        <div id=\"main-heading\">\n          deipnon\n        </div>\n        {selectedPage === 1 && \n          <PageContext.Provider value={{ selectedRecipes, handleRemoveSelectedRecipe }}>\n            <ShoppingPage/>\n          </PageContext.Provider>\n        }\n        {selectedPage === 0 && \n          <PageContext.Provider value={{handleSelectedRecipe }}>\n            <RecipePage/>\n          </PageContext.Provider>\n        }\n      </FadeIn>\n        <div id=\"main-footer\">\n          <PageContext.Provider value={{ selectedPage, handlePageChange }}>\n            <PageTab/>\n          </PageContext.Provider>\n        </div>\n    </div>\n  );\n}\n\nexport default MainView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainView from './components/main/MainView';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainView />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}